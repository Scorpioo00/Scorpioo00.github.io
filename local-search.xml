<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Win11优化教程</title>
    <link href="/2024/07/09/Win11%E4%BC%98%E5%8C%96%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/Win11%E4%BC%98%E5%8C%96%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>OS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mysql安装教程</title>
    <link href="/2024/07/09/Mysql%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/Mysql%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -qa | grep mariadb<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -e --nodeps mariadb-libs-5.5.65-1.el7.x86_64<br></code></pre></td></tr></table></figure><p>1、添加mysql仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm<br></code></pre></td></tr></table></figure><p><img src="/%5Cimg%5Cmysql%5Cmysql.png" alt="mysql"></p><p>2、查看仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum repolist all | grep mysql | grep enabled<br></code></pre></td></tr></table></figure><p>3、安装mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install mysql-community-server<br></code></pre></td></tr></table></figure><p>4、启动mysql并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start mysqld<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable mysqld<br></code></pre></td></tr></table></figure><p>5、修改mysql初始化密码</p><p>获取到初始密码，登录mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /var/log/mysqld.log | grep -i &#x27;temporary password&#x27;<br></code></pre></td></tr></table></figure><p>重新设置密码规则</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">set global validate_password_policy=0;<br>set global validate_password_length=4;<br>alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;<br></code></pre></td></tr></table></figure><p>设置新密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">use mysql;<br>UPDATE user SET authentication_string=password(&#x27;123456&#x27;) WHERE user=&#x27;root&#x27;;<br></code></pre></td></tr></table></figure><p>允许远程访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27; with grant option;<br></code></pre></td></tr></table></figure><p>刷新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">flush privileges; <br></code></pre></td></tr></table></figure><p>6、设置数据库编码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/my.cnf<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">[client]<br>default-character-set=utf8<br><br>[mysql]<br>default-character-set=utf8<br><br>[mysqld]<br>collation-server = utf8_unicode_ci<br>init-connect=&#x27;SET NAMES utf8&#x27;<br>character-set-server = utf8<br></code></pre></td></tr></table></figure><p>7、开启端口访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --zone=public --add-port=3306/tcp --permanent<br>systemctl restart firewalld.service<br>firewall-cmd --zone=public --list-ports<br></code></pre></td></tr></table></figure><p>8、重启mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart mysqld<br></code></pre></td></tr></table></figure><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull mysql:latest<br></code></pre></td></tr></table></figure><p>启动镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -p 3306:3306 --name mysql-scorpio \<br>--restart=always \<br>--privileged=true \<br>-v /usr/local/src/mysql/log:/var/log/mysql \<br>-v /usr/local/src/mysql/data:/var/lib/mysql \<br>-v /usr/local/src/mysql/conf:/etc/mysql/conf.d \<br>-e MYSQL_ROOT_PASSWORD=123456 \<br>-d mysql:latest \<br>--character-set-server=utf8mb4 \<br>--collation-server=utf8mb4_unicode_ci<br></code></pre></td></tr></table></figure><p>命令解析</p><blockquote><p> -p 3306:3306：指定宿主机端口与容器端口映射关系</p><p> –name mysql-scorpio：创建的容器名称</p><p> –restart&#x3D;always：总是跟随docker启动</p><p> –privileged&#x3D;true：获取宿主机root权限<br> -v &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;log:&#x2F;var&#x2F;log&#x2F;mysql：映射日志目录，宿主机:容器<br> -v &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql：映射数据目录，宿主机:容器<br> -v &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;conf:&#x2F;etc&#x2F;mysql：映射配置目录，宿主机:容器<br> -v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro：让容器的时钟与宿主机时钟同步，避免时区的问题，ro是read only的意思，就是只读。<br> -e MYSQL_ROOT_PASSWORD&#x3D;123456：指定mysql环境变量，root用户的密码为123456</p><p> -d mysql:latest：后台运行mysql容器，版本是latest。</p><p> –character-set-server&#x3D;utf8mb4 ：设置mysql-server编码<br> –collation-server&#x3D;utf8mb4_unicode_ci设置mysql-server的collation-server编码</p></blockquote><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>检测并删除已存在的MySQL服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sc query mysql<br></code></pre></td></tr></table></figure><p><strong>无结果，说明未安装过mysql或者已经卸载mysql服务，接下来直接安装mysql即可，否则需要删除之前安装的mysql</strong></p><p>若存在MySQL服务，则需要进行删除操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">net stop mysql<br></code></pre></td></tr></table></figure><p><strong>ps：删除服务之前，必须先进行停止操作，否则无法执行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sc delete mysql<br></code></pre></td></tr></table></figure><p>检查是否删除成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sc query mysql<br></code></pre></td></tr></table></figure><p><strong>无结果，说明已删除</strong></p><p>下载MySQL安装包</p><p><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-1.png" alt="win-mysql-1"></p><p>运行xxx.msi程序进行安装，点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-2.png" alt="win-mysql-2"></p><p>点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-3.png" alt="win-mysql-3"></p><p>选择自定义安装</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-4.png" alt="win-mysql-4"></p><p>自定义安装位置后点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-5.png" alt="win-mysql-5"></p><p>点击Install进行安装</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-6.png" alt="win-mysql-6"></p><p>勾选配置项后点击finish</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-7.png" alt="win-mysql-7"></p><p>点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-8.png" alt="win-mysql-8"></p><p>自定义data文件夹位置，点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-9.png" alt="win-mysql-9"></p><p>点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-10.png" alt="image\win-mysql-10"></p><p>设置root密码</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-11.png" alt="win-mysql-11"></p><p>设置MySQL服务名，点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-12.png" alt="win-mysql-12"></p><p>设置访问权限</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-13.png" alt="win-mysql-13"></p><p>创建简单示例数据库，点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-14.png" alt="win-mysql-14"></p><p>确认配置项，点击Execute执行</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-15.png" alt="win-mysql-15"></p><p>点击next下一步</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-16.png" alt="win-mysql-16"></p><p>点击finish完成安装</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-17.png" alt="win-mysql-17"></p><p>在系统变量中新建MYSQL_HOME</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-18.png" alt="win-mysql-18"></p><p>在系统变量中找到Path(PATH)变量，点击新建</p><p><img src="/%5Cimg%5Cmysql%5Cwin-mysql-19.png" alt="win-mysql-19"></p><p>连接mysql，测试安装是否成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql -uroot -p123456<br></code></pre></td></tr></table></figure><p>开启远程访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">USE mysql;<br>UPDATE user SET Host = &#x27;%&#x27; WHERE User = &#x27;root&#x27;;<br>FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><p>重启MySQL服务（服务名查看方式：Win+R输入services.msc找到MySQL）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">net stop MySQL84<br>net stop MySQL84<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevTool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Windows</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Jenkins安装教程</title>
    <link href="/2024/07/09/Jenkins%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/Jenkins%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h1><h2 id="Jenkins-简介"><a href="#Jenkins-简介" class="headerlink" title="Jenkins 简介"></a>Jenkins 简介</h2><p>  Jenkins是一个开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。<br>  Jenkins是一个功能强大的应用程序，允许持续集成和持续交付项目，无论用的是什么平台。这是一个免费的源代码，可以处理任何类型的构建或持续集成。集成Jenkins可以用于一些测试和部署技术。<br>  Jenkins是一种软件允许持续集成。Jenkins 安装在一台服务上也中央构建发生的地方。</p><p>Jenkins 是一个可扩展的持续集成引擎。</p><blockquote><p>主要用于：<br>1、持续、自动地构建&#x2F;测试软件项目。<br>2、 监控一些定时执行的任务。<br>Jenkins拥有的特性包括：<br>1、 易于安装-只要把jenkins.war部署到servlet容器，不需要数据库支持。<br>2、 易于配置-所有配置都是通过其提供的web界面实现。<br>3、 集成RSS&#x2F;E-mail通过RSS发布构建结果或当构建完成时通过e-mail通知。<br>4、 生成JUnit&#x2F;TestNG测试报告。<br>5、 分布式构建支持Jenkins能够让多台计算机一起构建&#x2F;测试。<br>9、 文件识别:Jenkins能够跟踪哪次构建生成哪些jar，哪次构建使用哪个版本的jar等。<br>10、 插件支持:支持扩展插件，你可以开发适合自己团队使用的工具。</p></blockquote><blockquote><p>Jenkins的目标：<br>Jenkins的主要目标是监控软件开发流程，快速显示问题。所以能保证开发人员以及相关人员省时省力提高开发效率。<br>CI系统在整个开发过程中的主要作用是控制：当系统在代码存储库中探测到修改时，它将运行构建的任务委托给构建过程本身。如果构建失败了，那么CI系统将通知相关人员，然后继续监视存储库。它的角色看起来是被动的；但它确能快速反映问题。</p></blockquote><blockquote><p>特别是它具有以下优点：<br>1、Jenkins一切配置都可以在web界面上完成。有些配置如MAVEN_HOME和Email，只需要配置一次，所有的项目就都能用。当然也可以通过修改XML进行配置。<br>2、 支持Maven的模块(Module)，Jenkins对Maven做了优化，因此它能自动识别Module，每个Module可以配置成一个job,相当灵活。<br>3、 测试报告聚合，所有模块的测试报告都被聚合在一起，结果一目了然，使用其他CI，这几乎是件不可能完成的任务。<br>4、 构件指纹(artifact fingerprint)，每次build的结果构件都被很好的自动管理，无需任何配置就可以方便的浏览下载。</p></blockquote><blockquote><p>Jenkins功能包括：<br>1、持续的软件版本发布&#x2F;测试项目。<br>2、监控外部调用执行的工作。</p></blockquote><p>官网：<a href="https://links.jianshu.com/go?to=https://jenkins.io/">https://jenkins.io/</a></p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><ol><li><p>下载地址：<a href="https://links.jianshu.com/go?to=https://jenkins.io/download/">https://jenkins.io/download/</a></p><p><img src="/img/jenkins/14929498-a62c47600cc9cd18.webp" alt="img"></p><p>下载地址</p><p><img src="/img/jenkins/14929498-310519d5a47d6416.webp" alt="img"></p></li><li><p>安装JDK与Maven</p></li></ol><p>下载安装与运行：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"># 下载 war 包<br>[root@localhost ~]<span class="hljs-meta"># wget http:<span class="hljs-comment">//ftp-chi.osuosl.org/pub/jenkins/war-stable/2.190.1/jenkins.war</span></span><br># 运行<br>[root@localhost ~]<span class="hljs-meta"># java -jar jenkins.war --httpPort=8080</span><br>Running from: /root/jenkins.war<br>webroot: $user.home/.jenkins<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">47.975</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    org.eclipse.jetty.util.log.Log<span class="hljs-meta">#initialized: Logging initialized @307ms to org.eclipse.jetty.util.log.JavaUtilLog</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.042</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    winstone.Logger#logInternal: Beginning extraction from war file<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.061</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] WARNING o.e.j.s.handler.ContextHandler#setContextPath: Empty contextPath<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.103</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    org.eclipse.jetty.server.Server#doStart: jetty<span class="hljs-number">-9.4</span>.z-SNAPSHOT; built: <span class="hljs-number">2019</span><span class="hljs-number">-05</span><span class="hljs-number">-02</span>T00:<span class="hljs-number">04</span>:<span class="hljs-number">53.875</span>Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm <span class="hljs-number">1.8</span><span class="hljs-number">.0</span>_222-b10<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.276</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    o.e.j.w.StandardDescriptorProcessor#visitServlet: <span class="hljs-literal">NO</span> JSP Support <span class="hljs-keyword">for</span> /, did not find org.eclipse.jetty.jsp.JettyJspServlet<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.306</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    o.e.j.s.s.DefaultSessionIdManager#doStart: DefaultSessionIdManager workerName=node0<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.307</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    o.e.j.s.s.DefaultSessionIdManager#doStart: No SessionScavenger set, using defaults<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.308</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    o.e.j.server.session.HouseKeeper#startScavenging: node0 Scavenging every <span class="hljs-number">600000</span>ms<br>Jenkins home directory: /root/.jenkins found at: $user.home/.jenkins<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.643</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    o.e.j.s.handler.ContextHandler#doStart: Started w.@<span class="hljs-number">37313</span>c65&#123;Jenkins v2<span class="hljs-number">.190</span><span class="hljs-number">.1</span>,/,file:<span class="hljs-comment">///root/.jenkins/war/,AVAILABLE&#125;&#123;/root/.jenkins/war&#125;</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.666</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    o.e.j.server.AbstractConnector#doStart: Started ServerConnector@<span class="hljs-number">26</span>ba2a48&#123;HTTP/<span class="hljs-number">1.1</span>,[http/<span class="hljs-number">1.1</span>]&#125;&#123;<span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:<span class="hljs-number">8080</span>&#125;<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.683</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">1</span>] INFO    org.eclipse.jetty.server.Server#doStart: Started @<span class="hljs-number">1016</span>ms<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">48.684</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">20</span>]    INFO    winstone.Logger#logInternal: Winstone Servlet Engine v4<span class="hljs-number">.0</span> running: controlPort=disabled<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">49.465</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">28</span>]    INFO    jenkins.InitReactorRunner$<span class="hljs-number">1</span>#onAttained: Started initialization<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">49.468</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">26</span>]    INFO    jenkins.InitReactorRunner$<span class="hljs-number">1</span>#onAttained: Listed all plugins<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">50.392</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">26</span>]    INFO    jenkins.InitReactorRunner$<span class="hljs-number">1</span>#onAttained: Prepared all plugins<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">50.395</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">26</span>]    INFO    jenkins.InitReactorRunner$<span class="hljs-number">1</span>#onAttained: Started all plugins<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">50.423</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">26</span>]    INFO    jenkins.InitReactorRunner$<span class="hljs-number">1</span>#onAttained: Augmented all extensions<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">50.797</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">28</span>]    INFO    jenkins.InitReactorRunner$<span class="hljs-number">1</span>#onAttained: Loaded all jobs<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">50.885</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">41</span>]    INFO    hudson.model.AsyncPeriodicWork$<span class="hljs-number">1</span><span class="hljs-meta">#run: Started Download metadata</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">50.964</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">41</span>]    INFO    hudson.util.Retrier<span class="hljs-meta">#start: Attempt #1 to do the action check updates server</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51.497</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    o.s.c.s.AbstractApplicationContext#prepareRefresh: Refreshing org.springframework.web.context.support.StaticWebApplicationContext@<span class="hljs-number">37237</span>ab6: display name [Root WebApplicationContext]; startup date [Wed Oct <span class="hljs-number">09</span> <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51</span> CST <span class="hljs-number">2019</span>]; root of context hierarchy<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51.497</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    o.s.c.s.AbstractApplicationContext#obtainFreshBeanFactory: Bean factory <span class="hljs-keyword">for</span> application context [org.springframework.web.context.support.StaticWebApplicationContext@<span class="hljs-number">37237</span>ab6]: org.springframework.beans.factory.support.DefaultListableBeanFactory@<span class="hljs-number">43064</span>edb<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51.507</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    o.s.b.f.s.DefaultListableBeanFactory#preInstantiateSingletons: Pre-instantiating singletons <span class="hljs-keyword">in</span> org.springframework.beans.factory.support.DefaultListableBeanFactory@<span class="hljs-number">43064</span>edb: defining beans [authenticationManager]; root of factory hierarchy<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51.645</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    o.s.c.s.AbstractApplicationContext#prepareRefresh: Refreshing org.springframework.web.context.support.StaticWebApplicationContext@<span class="hljs-number">20</span>cd72f: display name [Root WebApplicationContext]; startup date [Wed Oct <span class="hljs-number">09</span> <span class="hljs-number">10</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51</span> CST <span class="hljs-number">2019</span>]; root of context hierarchy<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51.645</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    o.s.c.s.AbstractApplicationContext#obtainFreshBeanFactory: Bean factory <span class="hljs-keyword">for</span> application context [org.springframework.web.context.support.StaticWebApplicationContext@<span class="hljs-number">20</span>cd72f]: org.springframework.beans.factory.support.DefaultListableBeanFactory@<span class="hljs-number">5</span>a4fc459<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51.645</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    o.s.b.f.s.DefaultListableBeanFactory#preInstantiateSingletons: Pre-instantiating singletons <span class="hljs-keyword">in</span> org.springframework.beans.factory.support.DefaultListableBeanFactory@<span class="hljs-number">5</span>a4fc459: defining beans [filter,legacy]; root of factory hierarchy<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">02</span>:<span class="hljs-number">51.771</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    jenkins.install.SetupWizard<span class="hljs-meta">#init: </span><br><br>*************************************************************<br>*************************************************************<br>*************************************************************<br><br>Jenkins initial setup is required. An admin user has been created and a password generated.<br>Please use the following password to proceed to installation:<br><br><span class="hljs-number">6739</span>a91dcefe4b53b2685723bf1ecd71<br><br>This may also be found at: /root/.jenkins/secrets/initialAdminPassword<br><br>*************************************************************<br>*************************************************************<br>*************************************************************<br><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">03</span>:<span class="hljs-number">02.041</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    hudson.model.UpdateSite#updateData: Obtained the latest update center data file <span class="hljs-keyword">for</span> UpdateSource <span class="hljs-keyword">default</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">03</span>:<span class="hljs-number">03.121</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">25</span>]    INFO    jenkins.InitReactorRunner$<span class="hljs-number">1</span>#onAttained: Completed initialization<br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">03</span>:<span class="hljs-number">03.150</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">19</span>]    INFO    hudson.WebAppMain$<span class="hljs-number">3</span><span class="hljs-meta">#run: Jenkins is fully up and running</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">03</span>:<span class="hljs-number">04.781</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">41</span>]    INFO    hudson.model.UpdateSite#updateData: Obtained the latest update center data file <span class="hljs-keyword">for</span> UpdateSource <span class="hljs-keyword">default</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">03</span>:<span class="hljs-number">05.315</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">41</span>]    INFO    h.m.DownloadService$Downloadable<span class="hljs-meta">#load: Obtained the updated data file for hudson.tasks.Maven.MavenInstaller</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">03</span>:<span class="hljs-number">05.315</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">41</span>]    INFO    hudson.util.Retrier<span class="hljs-meta">#start: Performed the action check updates server successfully at the attempt #1</span><br><span class="hljs-number">2019</span><span class="hljs-number">-10</span><span class="hljs-number">-09</span> <span class="hljs-number">02</span>:<span class="hljs-number">03</span>:<span class="hljs-number">05.321</span>+<span class="hljs-number">0000</span> [<span class="hljs-type">id</span>=<span class="hljs-number">41</span>]    INFO    hudson.model.AsyncPeriodicWork$<span class="hljs-number">1</span><span class="hljs-meta">#run: Finished Download metadata. 14,430 ms</span><br></code></pre></td></tr></table></figure><p>YUM 安装：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># YUM 安装</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># yum install jenkins</span><br><span class="hljs-comment"># WAR包 </span><br>/usr/lib/jenkins/jenkins.war    <br><span class="hljs-comment">#  配置文件, 修改用户为:root</span><br>/etc/sysconfig/jenkins      <br><span class="hljs-comment"># 默认的JENKINS_HOME目录</span><br>/var/lib/jenkins/       <br><span class="hljs-comment">#  Jenkins日志文件</span><br>/var/log/jenkins/jenkins.log   <br><span class="hljs-comment"># 添加服务</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># service jenkins start</span><br><span class="hljs-comment"># 启动测试</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># systemctl start jenkins</span><br><span class="hljs-title class_">Starting</span> jenkins (via systemctl):                          [  确定  ]<br><span class="hljs-comment"># 重启 jenkins</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># systemctl restart jenkins</span><br>注意： systemctl start jenkins 启动不了<br></code></pre></td></tr></table></figure><p>RPM 安装</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">https:<span class="hljs-comment">//pkg.jenkins.io/redhat-stable/jenkins-2.190.1-1.1.noarch.rpm</span><br></code></pre></td></tr></table></figure><h2 id="启动测试"><a href="#启动测试" class="headerlink" title="启动测试"></a>启动测试</h2><p>启动</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@localhost ~</span>]<span class="hljs-meta"># java -jar jenkins.war --httpPort=8080</span><br>或<br>[<span class="hljs-meta">root@localhost ~</span>]<span class="hljs-meta"># systemctl restart jenkins</span><br></code></pre></td></tr></table></figure><ol><li><p>安装配置</p><p><img src="/img/jenkins/14929498-922c02b9449445c4.webp" alt="img"></p><p>获取密码</p></li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@localhost ~</span>]<span class="hljs-meta"># vi /root/.jenkins/secrets/initialAdminPassword</span><br></code></pre></td></tr></table></figure><p>默认插件安装<br>比较慢(看网速)：</p><p><img src="/img/jenkins/14929498-28360d323cf7d714.webp" alt="img"></p><p>安装插件</p><p><img src="/img/jenkins/14929498-b3f5b4a53e6383ad.webp" alt="img"></p><ol start="2"><li><p>创建管理员</p><p><img src="/img/jenkins/14929498-40303baec6348bc3.webp" alt="img"></p></li><li><p>实例配置</p><p><img src="/img/jenkins/14929498-66bc430edfb9d551.webp" alt="img"></p><ol start="4"><li>安装完成</li></ol><p><img src="/img/jenkins/14929498-a5951568e3907ba5.webp" alt="img"></p></li></ol><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><p><img src="/img/jenkins/14929498-e39ccd75fa070882.webp" alt="img"></p><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><ol><li><p>Maven构建插件<br>Maven Integration<br>Maven集成</p><p><img src="/img/jenkins/14929498-e8ef8190c9d8a8ca.webp" alt="img"></p><p>安装完成后，新建任务中会出现，Maven项目：</p><p><img src="/img/jenkins/14929498-52a2b6e1528f9fab.webp" alt="img"></p></li><li><p>Deploy to container<br>布署到容器如：Tomcat</p></li><li><p>Publish Over SSH<br>把jenkins服务器上的文件,传输到远程服务器的指定目录。</p><p><img src="/img/jenkins/14929498-72e9da0205453560.webp" alt="img"></p></li><li><p>Multijob plugin<br>可以让jenkins任务按照分组、顺序执行jenkins版本。</p></li><li><p>安装和Git，GitLab插件</p><p><img src="/img/jenkins/14929498-ab8742d8b90fcaa1.webp" alt="img"></p></li><li><p>Gitee<br>文档地址：<a href="https://links.jianshu.com/go?to=https://gitee.com/help/articles/4193%23article-header2">https://gitee.com/help/articles/4193#article-header2</a><br>码云插件。</p><p><img src="/img/jenkins/14929498-e8e5c666d185bcc7.webp" alt="img"></p></li></ol><blockquote><p>码云链接配置：<br>1)前往 Jenkins -&gt; Manage Jenkins -&gt; Configure System -&gt; Gitee Configuration -&gt; Gitee connections<br>2)在 Connection name 中输入 Gitee 或者你想要的名字(一般为项目名称)</p><p><img src="/img/jenkins/14929498-90f585a74910ece3.webp" alt="img"></p><p>名称</p><p>3)Gitee host URL 中输入码云完整 URL地址： </p><p><a href="https://gitee.com/">https://gitee.com</a></p><p>（码云私有化客户输入部署的域名）</p><p>4)创建码云私人令牌</p><p>地址：</p><p><a href="https://gitee.com/profile/personal_access_tokens">https://gitee.com/profile/personal_access_tokens</a></p><p><img src="/img/jenkins/14929498-b60a8c6980e387dc.webp" alt="img"></p><p>创建码云私人令牌</p><p><img src="/img/jenkins/14929498-d052f5e8b991a560.webp" alt="img"></p><p>5)认证配置</p><p><img src="/img/jenkins/14929498-960432e878f0c3bd.webp" alt="img"></p><p>认证配置</p><p><img src="/img/jenkins/14929498-6a7fce9e0def6043.webp" alt="img"></p><p>6)测试</p><p><img src="/img/jenkins/14929498-eaa2be0184e94709.webp" alt="img"></p></blockquote><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><ol><li><p>JDK</p><p><img src="/img/jenkins/14929498-880c6f7c9583ddce.webp" alt="img"></p></li><li><p>GIT</p><p><img src="/img/jenkins/14929498-78a48cae0a905aa2.webp" alt="img"></p><p>检查系统是否安装</p><p>如果没有安装，请使用以下命令安装:</p></li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@bogon ~</span>]<span class="hljs-meta"># yum install git</span><br></code></pre></td></tr></table></figure><ol><li><p>Maven</p><p><img src="/img/jenkins/14929498-1fa079d42e6ccf7d.webp" alt="img"></p></li></ol><h2 id="认证配置"><a href="#认证配置" class="headerlink" title="认证配置"></a>认证配置</h2><ol><li><p>添加一个jenkins连接到码云时，登录到码云的用户名和密码</p><p><img src="/img/jenkins/14929498-eb33c0085490e3f7.webp" alt="img"></p><p>新建认证</p><p><img src="/img/jenkins/14929498-0fe86d8c91eb8c33.webp" alt="img"></p><p>全局认证</p><p><img src="/img/jenkins/14929498-78c87efe1ad0c63d.webp" alt="img"></p></li></ol><h2 id="创建Maven构建任务"><a href="#创建Maven构建任务" class="headerlink" title="创建Maven构建任务"></a>创建Maven构建任务</h2><ol><li><p>Maven项目创建</p><p><img src="/img/jenkins/14929498-1c1ed6e07b76acda.webp" alt="img"></p></li><li><p>任务配置</p><p><img src="/img/jenkins/14929498-5d0ee855dff52153.webp" alt="img"></p><p>指定仓库及分支</p><p><img src="/img/jenkins/14929498-f13b777e8cff3cce.webp" alt="img"></p><p>添加时间戳</p><p><img src="/img/jenkins/14929498-a7f5a4d773dfea30.webp" alt="img"></p><p>前置构建设置：</p></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs go">clean install -Dmaven.test.skip=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><img src="/img/jenkins/14929498-a6b28d42dfb1ecde.webp" alt="img"></p><p>前置构建</p><p><img src="/img/jenkins/14929498-70d18d13068c7770.webp" alt="img"></p><ol><li><p>执行任务</p><p><img src="/img/jenkins/14929498-3a02ede1d6136f66.webp" alt="img"></p><p>执行任务</p><p><img src="/img/jenkins/14929498-152f584d7053b3c2.webp" alt="img"></p><p>查看输出</p><p><img src="/img/jenkins/14929498-9832926f41edf091.webp" alt="img"></p></li></ol><h2 id="使用Tomcat自动化部署"><a href="#使用Tomcat自动化部署" class="headerlink" title="使用Tomcat自动化部署"></a>使用Tomcat自动化部署</h2><p>在构建后操作中选择Deploy war&#x2F;ear to a container</p><p><img src="/img/jenkins/tomcat.jpg" alt="img"></p><p>进行相关配置</p><p><img src="/img/jenkins/container.jpg" alt="img"></p><h2 id="docker-tomcat自动化部署"><a href="#docker-tomcat自动化部署" class="headerlink" title="docker+tomcat自动化部署"></a>docker+tomcat自动化部署</h2><p>插件安装</p><p><img src="/img/jenkins/20190327132825800.png" alt="img"></p><p><img src="/img/jenkins/20190327132859908.png" alt="img"></p><p>添加ssh远程主机，系统管理-&gt;系统配置</p><p><img src="/img/jenkins/1598588986(1).jpg" alt="img"></p><p>部署私有镜像仓库 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -v /opt/registry:/var/lib/registry -p 5000:5000 --restart=always --name registry registry<br></code></pre></td></tr></table></figure><p>添加HTTP可信任</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/docker/daemon.json<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">&#123;<br>    &quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;],<br>    &quot;insecure-registries&quot;:[&quot;192.168.1.55:5000&quot;]<br>&#125;<br></code></pre></td></tr></table></figure><p>构建Tomcat基础镜像</p><p>ps：通过Dockerfile构建镜像，需将Dockerfile放在与宿主机要复制到docker容器内的资源路径同级或上级，否则无法进行资源复制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim Dockerfile<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell">FROM centos:7<br>MAINTAINER scorpio<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">切换镜像目录，进入/usr/local/src目录</span><br>WORKDIR /usr/local/src<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在/usr/local/src/下创建jdk目录,用来存放jdk文件</span><br>RUN mkdir jdk<br><span class="hljs-meta prompt_">#</span><span class="language-bash">在/usr/local/src/下创建tomcat目录，用来存放tomcat</span><br>RUN mkdir tomcat<br><br>RUN rm -rf tomcat/webapps/*.war<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">将宿主机的jdk目录下的文件拷至镜像的/usr/jdk目录下</span><br>ADD jdk /usr/local/src/jdk<br><span class="hljs-meta prompt_">#</span><span class="language-bash">将宿主机的tomcat目录下的文件拷至镜像的/usr/tomcat目录下</span><br>ADD tomcat /usr/local/src/tomcat/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置环境变量</span><br>ENV JAVA_HOME=/usr/local/src/jdk<br>ENV JRE_HOME=$JAVA_HOME/jre<br>ENV CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH<br>ENV PATH=/sbin:$JAVA_HOME/bin:$PATH<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">公开端口</span><br>EXPOSE 8080<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置启动命令</span><br>ENTRYPOINT [&quot;/usr/local/src/tomcat/bin/catalina.sh&quot;,&quot;run&quot;]<br></code></pre></td></tr></table></figure><p>构建镜像并push到私有仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker build -t 192.168.1.55:5000/tomcat .<br>docker push  192.168.1.55:5000/tomcat<br></code></pre></td></tr></table></figure><p>在Post Steps中进行相关配置</p><p><img src="/img/jenkins/1598589460(1).jpg" alt="img"></p><p>获取仓库中构建的tomcat镜像，基于此镜像将编译打包后的war包拷贝到tomcat webapps目录，构建镜像并推送到私有仓库</p><p><img src="/img/jenkins/1598589544(1).jpg" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">REPOSITORY=192.168.1.55:5000/petzm-manage<br>VERSION=8.5.56<br><span class="hljs-meta prompt_"># </span><span class="language-bash">构建镜像</span><br>cat &gt; Dockerfile &lt;&lt; EOF<br>FROM 192.168.1.55:5000/tomcat<br>RUN rm -rf /usr/local/src/tomcat/webapps/*.war<br>COPY manage-admin/manage-admin-context/target/*.war /usr/local/src/tomcat/webapps<br>CMD [&quot;/usr/local/src/tomcat/bin/catalina.sh&quot;, &quot;run&quot;]<br>EOF<br>docker build -t $REPOSITORY .<br><span class="hljs-meta prompt_"># </span><span class="language-bash">上传镜像</span><br>docker push $REPOSITORY<br></code></pre></td></tr></table></figure><p>镜像构建完成后， 使用ssh远程登录部署服务器（192.168.1.121）上删除已经存在的容器和拉取的部署镜像，重新部署新的容器</p><p><img src="/img/jenkins/1598589628(1).jpg" alt="img"></p><p><img src="/img/jenkins/1598589682(1).jpg" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">REPOSITORY=192.168.1.55:5000/petzm-manage<br><span class="hljs-meta prompt_"># </span><span class="language-bash">部署</span><br>docker rm -f petzm-manage<br>docker rmi $REPOSITORY<br>docker run -d --name petzm-manage  -p 8080:8080 -v /usr/local/src/jdk:/usr/local/src/jdk $REPOSITORY<br></code></pre></td></tr></table></figure><h2 id="jar包打成镜像自动部署"><a href="#jar包打成镜像自动部署" class="headerlink" title="jar包打成镜像自动部署"></a>jar包打成镜像自动部署</h2><p>自定义Dockerfile</p><p>ps：通过Dockerfile构建镜像，需将Dockerfile放在与宿主机要复制到docker容器内的资源路径同级或上级，否则无法进行资源复制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim Dockerfile<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs shell">FROM centos:7<br>MAINTAINER scorpio<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">切换镜像目录，进入/usr/local/src目录</span><br>WORKDIR /usr/local/src<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建工程目录</span><br>RUN mkdir project<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建jdk目录</span><br>RUN mkdir jdk<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">复制工程文件</span><br>ADD src/edit/petzm-admin-context.jar /usr/local/src/project<br><span class="hljs-meta prompt_">#</span><span class="language-bash">复制jdk</span><br>ADD src/jdk /usr/local/src/jdk<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">编辑环境变量</span><br>ENV JAVA_HOME=/usr/local/src/jdk<br>ENV JRE_HOME=$JAVA_HOME/jre<br>ENV CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH<br>ENV PATH=/sbin:$JAVA_HOME/bin:$PATH<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">公开端口</span><br>EXPOSE 8080<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置启动命令</span><br>ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;/usr/local/src/project/petzm-admin-context.jar&quot;]<br></code></pre></td></tr></table></figure><p>自定义脚本文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim mytest.sh<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">构建镜像</span><br>docker build -t 192.168.1.55:5000/petzm .<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">推送docker镜像</span><br>docker push 192.168.1.55:5000/petzm<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">运行容器</span><br>docker run -d --name petzm -p 8080:8080 192.168.1.55:5000/petzm<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod u+x jartest.sh<br></code></pre></td></tr></table></figure><p>在Post Steps中进行相关配置</p><p><img src="/img/jenkins/1598589460(1).jpg" alt="img"></p><p>将build成功后的jar包打成镜像文件</p><p><img src="/img/jenkins/1598607541(1).jpg" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">REPOSITORY=192.168.1.55:5000/petzm<br>cat &gt; Dockerfile &lt;&lt; EOF <br>FROM java:8<br>MAINTAINER scorpio<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">切换镜像目录，进入/usr/local/src目录</span><br>WORKDIR /usr/local/src<br><span class="hljs-meta prompt_">#</span><span class="language-bash">创建工程目录</span><br>RUN mkdir project<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">复制工程文件</span><br>COPY manage-admin/manage-admin-context/target/*.jar /usr/local/src/project<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">公开端口</span><br>EXPOSE 8080<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置启动命令</span><br>ENTRYPOINT [&quot;java&quot;,&quot;-jar&quot;,&quot;/usr/local/src/project/manage-admin-context.jar&quot;]<br>EOF<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">构建镜像</span><br>docker build -t $REPOSITORY .<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">推送docker镜像</span><br>docker push $REPOSITORY<br></code></pre></td></tr></table></figure><p>镜像构建完成后， 使用ssh远程登录部署服务器（192.168.1.121）上删除已经存在的容器和拉取的部署镜像，重新部署新的容器</p><p><img src="/img/jenkins/1598589628(1).jpg" alt="img"></p><p><img src="/img/jenkins/1598607621(1).jpg" alt="img"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">REPOSITORY=192.168.1.55:5000/petzm<br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除同名docker容器</span><br>docker rm -f petzm<br><span class="hljs-meta prompt_">#</span><span class="language-bash">删除镜像</span><br>docker rmi $REPOSITORY<br><span class="hljs-meta prompt_">#</span><span class="language-bash">运行容器</span><br>docker run -d --name petzm -p 8080:8888 $REPOSITORY<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>安装教程</tag>
      
      <tag>运维</tag>
      
      <tag>部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis安装教程</title>
    <link href="/2024/07/09/Redis%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/Redis%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Nacos安装教程</title>
    <link href="/2024/07/09/Nacos%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/Nacos%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Seata安装教程</title>
    <link href="/2024/07/09/Seata%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/Seata%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Rabbitmq安装教程</title>
    <link href="/2024/07/09/Rabbitmq%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/Rabbitmq%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Maven安装教程</title>
    <link href="/2024/07/09/Maven%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/Maven%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>下载压缩包</p><p><a href="https://dlcdn.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.tar.gz">https://dlcdn.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.tar.gz</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -P /usr/local/src https://dlcdn.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.tar.gz<br></code></pre></td></tr></table></figure><p>放入指定目录（没有就自己创建）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /usr/local/src/maven<br></code></pre></td></tr></table></figure><p>解压文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxvf apache-maven-3.6.3-bin.tar.gz<br></code></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/profile<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">export MAVEN_HOME=/usr/local/src/apache-maven-3.6.3<br>export PATH=$MAVEN_HOME/bin:$PATH <br></code></pre></td></tr></table></figure><p>刷新配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><p>检查版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn -v<br></code></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>下载压缩包</p><p><a href="https://dlcdn.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.zip">https://dlcdn.apache.org/maven/maven-3/3.9.8/binaries/apache-maven-3.9.8-bin.zip</a></p><p>解压到自定义目录，设置系统环境变量</p><p><img src="/img/maven/win-maven-1.png" alt="win-maven-1"></p><p>新建系统变量<strong>MAVEN_HOME</strong></p><p><img src="/img/maven/win-maven-2.png" alt="win-maven-2"></p><p>双击或编辑**Path(PATH)**，点击新建，创建以下变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">%</span><span class="language-bash">MAVEN_HOME%/bin</span><br></code></pre></td></tr></table></figure><p><img src="/img/maven/win-maven-3.png" alt="win-maven-3"></p><p>找到**管理控制台(cmd)**，输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn -v<br></code></pre></td></tr></table></figure><p><img src="/img/maven/win-maven-4.png" alt="win-maven-4"></p>]]></content>
    
    
    <categories>
      
      <category>DevTool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>安装教程</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JDK安装教程</title>
    <link href="/2024/07/09/JDK%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/09/JDK%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>下载jdk压缩包</p><p><a href="http://download.macromedia.com/pub/coldfusion/java/java8/8u261/jdk/jdk-8u261-linux-i586.tar.gz">http://download.macromedia.com/pub/coldfusion/java/java8/8u261/jdk/jdk-8u261-linux-i586.tar.gz</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget -P /usr/local/src http://download.macromedia.com/pub/coldfusion/java/java8/8u261/jdk/jdk-8u261-linux-i586.tar.gz<br></code></pre></td></tr></table></figure><p>放入到相应jdk目录下（没有就自己创建一个）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /usr/local/src/jdk<br></code></pre></td></tr></table></figure><p>解压文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar  -zxvf  jdk-8u261-linux-i586.tar.gz<br></code></pre></td></tr></table></figure><p>修改名称</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv jdk1.8.0_261/ jdk8<br></code></pre></td></tr></table></figure><p>编辑环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/profile<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">export JAVA_HOME=/usr/local/src/jdk8<br>export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br>export PATH=$PATH:$&#123;JAVA_HOME&#125;/bin<br></code></pre></td></tr></table></figure><p>刷新配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source /etc/profile<br></code></pre></td></tr></table></figure><p>测试安装情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -version<br>javac<br></code></pre></td></tr></table></figure><p>如果报错</p><p><img src="/img/jdk/error.png" alt="error"></p><p>解决方案</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install glibc.i686<br>sudo yum install libgcc.i686 --setopt=protected_multilib=false<br></code></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>下载资源文件</p><p><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></p><p>双击安装下载好的jdkxxxx.exe，点击下一步</p><p><img src="/img/jdk/linux-jdk-1.png" alt="linux-jdk-1"></p><p>自定义安装位置，点击下一步</p><p><img src="/img/jdk/linux-jdk-2.png" alt="linux-jdk-2"></p><p>修改或保持不变安装位置，点击下一步</p><p><img src="/img/jdk/linux-jdk-3.png" alt="linux-jdk-3"></p><p>安装完成</p><p><img src="/img/jdk/linux-jdk-4.png" alt="linux-jdk-4"></p><p>找到<strong>系统-高级系统设置</strong>，点击<strong>环境变量</strong></p><p><img src="/img/jdk/linux-jdk-5.png" alt="linux-jdk-5"></p><p>在系统变量点击新建<strong>JAVA_HOME</strong></p><p><img src="/img/jdk/linux-jdk-6.png" alt="linux-jdk-6"></p><p>在系统变量点击新建<strong>CLASS_PATH</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">.;%JAVA_HOME%/lib;%JAVA_HOME%/lib/tools.jar<br></code></pre></td></tr></table></figure><p><img src="/img/jdk/linux-jdk-7.png" alt="linux-jdk-7"></p><p>在系统变量中找到**Path(PATH)**变量，双击或点击编辑，点击新建添加以下两行</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haml"><span class="hljs-tag">%<span class="hljs-selector-tag">JAVA_HOME</span></span>%/bin<br><span class="hljs-tag">%<span class="hljs-selector-tag">JAVA_HOME</span></span>%/jre/bin<br></code></pre></td></tr></table></figure><p><img src="/img/jdk/linux-jdk-8.png" alt="linux-jdk-8"></p><p>找到**系统控制台(cmd)**，运行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -version<br>javac<br></code></pre></td></tr></table></figure><p><img src="/img/jdk/linux-jdk-9.png" alt="linux-jdk-9"></p>]]></content>
    
    
    <categories>
      
      <category>DevTool</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>安装教程</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker安装教程</title>
    <link href="/2024/07/08/Docker%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <url>/2024/07/08/Docker%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h2 id="基础准备："><a href="#基础准备：" class="headerlink" title="基础准备："></a>基础准备：</h2><p>yum update</p><p>yum install vim*</p><p>yum install wget</p><p>yum install net-tools</p><h2 id="版本支持"><a href="#版本支持" class="headerlink" title="版本支持"></a>版本支持</h2><p>1、Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。</p><p>通过 <strong>uname -r</strong> 命令查看你当前的内核版本（uname -r）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">uname -r<br></code></pre></td></tr></table></figure><p>2、卸载旧版本(如果安装过旧版本的话)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum remove docker  docker-common docker-selinux docker-engine<br></code></pre></td></tr></table></figure><p>3、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y yum-utils<br></code></pre></td></tr></table></figure><p>4、设置yum源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><p><img src="/img/docker/image1.png" alt="image1"></p><p>5、可以查看所有仓库中所有docker版本，并选择特定版本安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum list docker-ce --showduplicates | sort -r<br></code></pre></td></tr></table></figure><p><img src="/img/docker/image2.png" alt="image2"></p><p>6、安装docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install docker-ce<br></code></pre></td></tr></table></figure><p><img src="/img/docker/image3.png" alt="image3"></p><p>7、启动并加入开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start docker<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable docker<br></code></pre></td></tr></table></figure><p>8、验证安装是否成功(有client和service两部分表示docker安装启动都成功了)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker version<br></code></pre></td></tr></table></figure><p><img src="/img/docker/image4.png" alt="image4"></p><h2 id="镜像源配置"><a href="#镜像源配置" class="headerlink" title="镜像源配置"></a>镜像源配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /etc/docker/daemon.json<br></code></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>安装教程</tag>
      
      <tag>运维</tag>
      
      <tag>部署</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
